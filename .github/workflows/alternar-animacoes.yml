name: alternate animations

on:
  schedule:
    - cron: '0 */2 * * *'  # A cada 2 horas
  workflow_dispatch:  # Para rodar manualmente, se necess치rio
    inputs:
      animation:  # Entrada para definir qual anima칞칚o usar manualmente
        description: 'Escolha a anima칞칚o a ser inserida: snake ou pacman'
        required: false
        default: ''

jobs:
  update_readme:
    runs-on: ubuntu-latest

    steps:
    - name: Check out o reposit칩rio
      uses: actions/checkout@v2

    - name: Atualizar conte칰do no README
      run: |
        # Define o arquivo README
        README_FILE="README.md"

        # Bloco de c칩digo para "Snake"
        snake_code=$(cat << 'EOF'
        <div id="snake" align="center">
          <img src="https://raw.githubusercontent.com/miguel-lamazares/miguel-lamazares/output/snake.svg" alt="Snake animation" />
        </div>
        EOF
        )

        # Bloco de c칩digo para "Pacman"
        pacman_code=$(cat << 'EOF'
        <div id="pacman">
          <picture>
            <source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/miguel-lamazares/miguel-lamazares/output/pacman-contribution-graph-dark.svg">
            <source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/miguel-lamazares/miguel-lamazares/output/pacman-contribution-graph.svg">
            <img alt="pacman contribution graph" src="https://raw.githubusercontent.com/miguel-lamazares/miguel-lamazares/output/pacman-contribution-graph.svg">
          </picture>
        </div>
        EOF
        )

        # Determina a anima칞칚o a ser usada
        if [[ "${{ github.event.inputs.animation }}" == "snake" ]]; then
          code_to_insert="$snake_code"
        elif [[ "${{ github.event.inputs.animation }}" == "pacman" ]]; then
          code_to_insert="$pacman_code"
        else
          # Alterna entre os blocos baseado no hor치rio se n칚o for manual
          current_time=$(date +%H)
          if [ $(($current_time % 2)) -eq 0 ]; then
            code_to_insert="$snake_code"
          else
            code_to_insert="$pacman_code"
          fi
        fi

        # Substitui o conte칰do entre os marcadores no README.md
        awk -v replacement="$code_to_insert" '
          BEGIN { inside = 0 }
          /<!--animacoes-->/ { inside = 1; print $0; print replacement; next }
          /<!--fim-animacoes-->/ { inside = 0 }
          !inside { print $0 }
        ' "$README_FILE" > tmpfile && mv tmpfile "$README_FILE"

    - name: Check if changes exist and commit
      run: |
        # Verifica se h치 mudan칞as
        if ! git diff --exit-code; then
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

          # Verifica se a vari치vel README_FILE est치 definida
          if [ -z "$README_FILE" ]; then
            echo "README_FILE n칚o est치 definido. Verifique o fluxo do script."
            exit 1
          fi

          # Adiciona mudan칞as e faz commit
          git add "$README_FILE"
          git commit -m "游뱄 update animation"
          git push
        else
          echo "No changes to commit."
        fi  # Fechando o bloco do "if"